import torch
from transformers import MarianMTModel, MarianTokenizer

def translate_text(input_text, source_lang, target_lang):
    # Initialize the tokenizer and model for translation
    model_name = f'Helsinki-NLP/opus-mt-{source_lang}-{target_lang}'
    tokenizer = MarianTokenizer.from_pretrained(model_name)
    model = MarianMTModel.from_pretrained(model_name)

    # Tokenize the input text
    input_tokens = tokenizer.encode(input_text, return_tensors="pt")

    # Translate the input text
    with torch.no_grad():
        output_tokens = model.generate(input_tokens)

    # Decode and return the translated text
    translated_text = tokenizer.decode(output_tokens[0], skip_special_tokens=True)
    return translated_text

if __name__ == "__main__":
    source_lang = "en"  # Source language code (e.g., "en" for English)
    target_lang = "fr"  # Target language code (e.g., "fr" for French)

    input_text = "Hello, how are you?"  # Input text to be translated

    translated_text = translate_text(input_text, source_lang, target_lang)
    print(f"Input text ({source_lang}): {input_text}")
    print(f"Translated text ({target_lang}): {translated_text}")
